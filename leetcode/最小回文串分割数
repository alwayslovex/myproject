class Solution {
public:
    int minCut(string s) {
        vector<int> dp;
        dp.resize(s.size(),0);
        int min = 0;
        for(int i = 0; i < s.size();++i){
        // 从左到右 aab
            string ns = s.substr(0,i+1);
            if(!IsPalid(ns)){
                dp[i] = dp[i-1]+1;
            }else{
                continue;
            }
            //从右到左，进行最小回文的判定，abb
            for(int j =i;j > 0;j--){
            string ns = s.substr(j,i-j+1);
            if(IsPalid(ns)){
                dp[i] = dp[j-1]+1 > dp[i] ? dp[i] : dp[j-1]+1;
            }
        }
        }

        return dp[s.size()-1];
    }
    bool IsPalid(string str){
        string str2(str.rbegin(),str.rend());
        return str2 == str;
    }
};
   
//  dp[i] = min(f[0][j],f[j+1][i]) +1.   0 <j < i
