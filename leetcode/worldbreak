class Solution {
public:
    vector<int> record;
    bool wordBreak(string s, unordered_set<string> &dict) {
        record.resize(s.size(),-1);
        if(dict.empty()) return false;
        return check(s,dict,0);
    }
    bool check(const string &s,unordered_set<string> &dict,int start){
        if(start >= s.size()) return true;
        if(record[start] != -1 ) return record[start];
        
        for(size_t i = start+1;i <= s.size();++i)
        {
            string str = s.substr(start,i-start);
            auto it = dict.find(str);
            if(it != dict.end()){
                if (check(s,dict,i)){
                    record[start] = 1;
                    return true;
                }
            }
        }
        record[start] = 0;
        return false;
    }
};
