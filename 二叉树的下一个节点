/*
struct TreeLinkNode {
    int val;
    struct TreeLinkNode *left;
    struct TreeLinkNode *right;
    struct TreeLinkNode *next;
    TreeLinkNode(int x) :val(x), left(NULL), right(NULL), next(NULL) {
        
    }
    //当前节点，有右子树，
    //当前节点，无右子树，是根
    //当前节点，无右子树，是父节点的左子树
    //当前节点，无右子树，是父节点的右子树
};
*/
class Solution {
public:
    TreeLinkNode* GetNext(TreeLinkNode* pNode)
    {
        if(pNode == nullptr)
        {
            return nullptr;
        }
        
        if(pNode->right != nullptr)
        {
            auto tmp = pNode->right;
            while(tmp->left != nullptr)
            {
                tmp = tmp->left;
            }
            return tmp;
        }
        if(pNode->next == nullptr)
        {
            return nullptr;
        }
        else if(pNode->next->left == pNode)
        {
            return pNode->next;
        }
        else// if(pNode->next->right == pNode)//这里还要区分是整体的右子树还是左子树
        {
            auto tmp = pNode->next;
            while(tmp->next != nullptr)
            {
                if(tmp->next->right == tmp)
                {
                    tmp = tmp->next;
                }
                else{
                    return tmp->next;
                }
            }
            return nullptr;
        }
    }
};
